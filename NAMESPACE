# Generated by roxygen2: do not edit by hand

export(Doptim)
export(Dtrace)
export(LEDoptim)
export(LinMatrixH)
export(LinMatrixL)
export(LinMatrixLH)
export(LinMatrixL_occ)
export(RS_opt)
export(RS_opt_gen)
export(a_line_search)
export(bfgsb_min)
export(blockexp)
export(blockfinal)
export(blockheader)
export(blockopt)
export(calc_autofocus)
export(calc_ofv_and_fim)
export(calc_ofv_and_grad)
export(cell)
export(convert_variables)
export(create.poped.database)
export(create_design)
export(create_design_space)
export(diag_matlab)
export(downsizing_general_design)
export(ed_laplace_ofv)
export(ed_mftot)
export(evaluate.e.ofv.fim)
export(evaluate.fim)
export(feps.add)
export(feps.add.prop)
export(feps.prop)
export(feval)
export(ff.PK.1.comp.oral.md.CL)
export(ff.PK.1.comp.oral.md.KE)
export(ff.PK.1.comp.oral.sd.CL)
export(ff.PK.1.comp.oral.sd.KE)
export(ff.PKPD.1.comp.oral.md.CL.imax)
export(ff.PKPD.1.comp.sd.CL.emax)
export(fileparts)
export(getTruncatedNormal)
export(get_all_params)
export(get_rse)
export(get_unfixed_params)
export(getfulld)
export(gradf_eps)
export(inv)
export(isempty)
export(isfield)
export(log_prior_pdf)
export(mf)
export(mf3)
export(mf5)
export(mf6)
export(mf7)
export(mf8)
export(mfea)
export(mftot)
export(mftot0)
export(mftot1)
export(mftot2)
export(mftot3)
export(mftot4)
export(mftot5)
export(mftot6)
export(mftot7)
export(model_prediction)
export(ofv_criterion)
export(ofv_fim)
export(ones)
export(optim_ARS)
export(optim_LS)
export(pargen)
export(plot_efficiency_of_windows)
export(plot_model_prediction)
export(poped.choose)
export(poped_optim)
export(poped_optimize)
export(rand)
export(randn)
export(randperm)
export(size)
export(start_parallel)
export(test_for_max)
export(test_for_min)
export(test_for_zeros)
export(test_mat_size)
export(tic)
export(toc)
export(zeros)
import(ggplot2)
importFrom(stats,dlnorm)
importFrom(stats,dnorm)
importFrom(stats,end)
importFrom(stats,optim)
importFrom(stats,qnorm)
importFrom(stats,quantile)
importFrom(stats,rnorm)
importFrom(stats,runif)
importFrom(utils,capture.output)
importFrom(utils,find)
importFrom(utils,packageVersion)
importFrom(utils,stack)
